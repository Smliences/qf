<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Move element &apos;dom4j-1.6.1.jar&apos; to &apos;lib&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Destination element: &apos;lib&apos;&#x0D;&#x0A;- Original element: &apos;dom4j-1.6.1.jar&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move file" element1="WebRoot/WEB-INF/dom4j-1.6.1.jar" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1509970472125" target="WebRoot/WEB-INF/lib" units="0" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;jaxen-1.1-beta-6.jar&apos; to &apos;lib&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Destination element: &apos;lib&apos;&#x0D;&#x0A;- Original element: &apos;jaxen-1.1-beta-6.jar&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move file" element1="WebRoot/WEB-INF/jaxen-1.1-beta-6.jar" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1509970475003" target="WebRoot/WEB-INF/lib" units="0" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;attributeNames&apos; from expression &apos;req.getAttributeNames()&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;attributeNames&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;req.getAttributeNames()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;attributeNames&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="attributeNames" replace="true" selection="733 0" stamp="1509971320455" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;nextElement&apos; from expression &apos;attributeNames.nextElement()&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;nextElement&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;attributeNames.nextElement()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;nextElement&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="nextElement" replace="true" selection="875 0" stamp="1509971369813" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterNames&apos; from expression &apos;req.getParameterNames()&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;parameterNames&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;req.getParameterNames()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterNames&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="parameterNames" replace="true" selection="764 0" stamp="1509971440965" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;Day34_test&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.sml.test.Test.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.sml.test{Test.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1509971910041" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;nextElement&apos; from expression &apos;parameterNames.nextElement()&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;nextElement&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;parameterNames.nextElement()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;nextElement&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="nextElement" replace="true" selection="798 0" stamp="1509971979453" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parameterValues&apos; from expression &apos;req.getParameterValues(nextElement)&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;parameterValues&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;req.getParameterValues(nextElement)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parameterValues&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="parameterValues" replace="true" selection="899 0" stamp="1509972195120" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;new SAXReader().read(&quot;&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;read&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;new SAXReader().read(&quot;&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="read" replace="true" selection="959 0" stamp="1509972404371" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rootElement&apos; from expression &apos;doc.addElement(&quot;users&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;rootElement&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;doc.addElement(&quot;users&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;rootElement&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="rootElement" replace="true" selection="1013 0" stamp="1509972497542" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;username&apos; from expression &apos;rootElement.addElement(&quot;username&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;Day34_test&apos;&#x0D;&#x0A;- Variable name: &apos;username&apos;&#x0D;&#x0A;- Destination method: &apos;com.sml.test.Test.doPost()&apos;&#x0D;&#x0A;- Variable expression: &apos;rootElement.addElement(&quot;username&quot;)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;username&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.sml.test{Test.java" name="username" replace="true" selection="1102 0" stamp="1509972562302" version="1.0"/>
</session>